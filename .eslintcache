[{"/Users/Toyosi/Documents/codes/ToDo/frontend/src/index.js":"1","/Users/Toyosi/Documents/codes/ToDo/frontend/src/App.js":"2","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Header/Header.js":"3","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/TaskBoard/TaskBoard.js":"4","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Tasks/Tasks.js":"5","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Task/Task.js":"6","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Footer/Footer.js":"7","/Users/Toyosi/Documents/codes/ToDo/frontend/src/contexts/ModalContext.js":"8","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/CustomModal/CustomModal.js":"9","/Users/Toyosi/Documents/codes/ToDo/frontend/src/contexts/TaskContext.js":"10","/Users/Toyosi/Documents/codes/ToDo/frontend/src/reportWebVitals.js":"11"},{"size":571,"mtime":1608304052627,"results":"12","hashOfConfig":"13"},{"size":2811,"mtime":1608419227485,"results":"14","hashOfConfig":"13"},{"size":304,"mtime":1608321107485,"results":"15","hashOfConfig":"13"},{"size":253,"mtime":1608295406954,"results":"16","hashOfConfig":"13"},{"size":632,"mtime":1608417096706,"results":"17","hashOfConfig":"13"},{"size":2281,"mtime":1608408078037,"results":"18","hashOfConfig":"13"},{"size":629,"mtime":1608403776172,"results":"19","hashOfConfig":"13"},{"size":181,"mtime":1608358085942,"results":"20","hashOfConfig":"13"},{"size":1609,"mtime":1608405186910,"results":"21","hashOfConfig":"13"},{"size":199,"mtime":1608387464676,"results":"22","hashOfConfig":"13"},{"size":362,"mtime":1608231219389,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"365nf3",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/Toyosi/Documents/codes/ToDo/frontend/src/index.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/App.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Header/Header.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/TaskBoard/TaskBoard.js",["52"],"import React, { useContext } from 'react';\n\nimport Tasks from '../Tasks/Tasks';\nimport './TaskBoard.css';\nconst TaskBoard = () => {\n    return (\n        <div className=\"task-board\">\n            <Tasks />\n        </div>\n    );\n}\nexport default TaskBoard;",["53","54"],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Tasks/Tasks.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Task/Task.js",["55"],"import Checkbox from 'antd/lib/checkbox/Checkbox';\nimport { notification, Popconfirm } from 'antd';\n\nimport React, { useContext } from 'react';\n\nimport { ModalContext } from '../../contexts/ModalContext';\nimport { TaskContext } from '../../contexts/TaskContext';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons'\n\nimport './Task.css';\nconst Task = (props) => {\n    const modalContext = useContext(ModalContext);\n    const taskContext = useContext(TaskContext);\n\n    const deleteTask = (id) => {\n        taskContext.deleteTask(id);\n    }\n\n    const handleCheckBox = (id, checked) => {\n        taskContext.checkTask(id, checked);\n    }\n\n    return (\n        <div className={ !props.task.completed ? 'card mb-3' : 'card mb-3 completed'}>\n            <div className=\"card-body\">\n                <div className=\"row\">\n                    <div className=\"col-1\"><Checkbox checked={props.task.completed ? true : false} onChange={ (e) => handleCheckBox(props.task.id, e.target.checked) } /></div>\n                    <div className=\"col-9\">\n                        <h5 className=\"task-title\">{ props.task.task }</h5>\n                        <span className=\"task-time\"></span>\n                        <span className=\"task-location\"></span>\n                    </div>\n                    <div className=\"col-2\">\n                        <button \n                            className={ !props.task.completed ? 'btn btn-secondary mr-2' : 'btn mr-2 completed'} \n                            type=\"Edit\" onClick={ () => modalContext.setModalVisibility(true, 'edit-task', props.task.task, props.task.id) }><FontAwesomeIcon icon={faEdit} /></button>\n                        <Popconfirm placement=\"topLeft\" title=\"Are you sure?\" onConfirm={() => deleteTask(props.task.id)} okText=\"Yes\" cancelText=\"No\">\n                            <button \n                                className={ !props.task.completed ? 'btn btn-danger mr-2' : 'btn mr-2 completed'}\n                                type=\"button\"><FontAwesomeIcon icon={faTrash} /></button>\n                        </Popconfirm>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    );\n}\n\nexport default Task;","/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/Footer/Footer.js",["56"],"import React, { useContext } from 'react';\n\nimport { ModalContext } from '../../contexts/ModalContext';\nimport { TaskContext } from '../../contexts/TaskContext';\n\nimport './Footer.css';\nconst Footer = () => {\n    const modalContext = useContext(ModalContext);\n    const taskContext = useContext(TaskContext);\n    return (\n        <footer className=\"row\">\n            <div className=\"col-md-12\">\n                <button className=\"fab\" onClick={ () => {\n                    modalContext.setModalVisibility(true, 'new-task', '');\n                 } }>+</button>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;",["57","58"],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/contexts/ModalContext.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/components/CustomModal/CustomModal.js",[],["59","60"],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/contexts/TaskContext.js",[],"/Users/Toyosi/Documents/codes/ToDo/frontend/src/reportWebVitals.js",[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":27},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":22},{"ruleId":"61","severity":1,"message":"70","line":9,"column":11,"nodeType":"63","messageId":"64","endLine":9,"endColumn":22},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'notification' is defined but never used.","'taskContext' is assigned a value but never used.",["75"],["76"],["75"],["76"],"no-global-assign","no-unsafe-negation"]